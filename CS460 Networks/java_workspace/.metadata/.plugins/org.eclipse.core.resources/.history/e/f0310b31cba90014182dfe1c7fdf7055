/**
 * @author Kelvin Rodriguez (KR788)
 * @date   1/31/15
 * 
 * @decription This class contains the three required sort algorithms
 *  		   Bubble sort, selection sort, and insertion sort
 */


package CS249_Project1;

/**
 * Class that contains the sorting algorithms, the name is not very
 * practical, but it's cute.
 * @author KR788*/
public class SortingOfAllSorts {
	
	
	/**
	 * A simple class holding sorting metrics, the number of 
	 * comparison and the copy instructions executed during sorting
	 * @author KR788*/
	public static class SortData{
		public int comparisonCount;
		
		@Override 
		public String toString() {
			return "SortData [comparisonCount=" + comparisonCount
					+ ", copyCount=" + copyCount + "]";
		}
		public int copyCount;
	}
	
	/**
	 * Simple swap method for the sorting algorithms
	 * @param n1 some integer value to be swapped with n2
	 * @param n2 some other integer that will be swapped with n1  */
	private static void swap(Integer n1, Integer n2){
		Integer temp = n1;
		n1 = n2;
		n2 = temp;
	}
	
	/**
	 * Simple off-the-shelf bubble sort algorithm
	 * (i.e no optimization using flags and what-not)
	 * @param array the array to be sorted
	 * @return an object containing sorting metrics */
	public static SortData bubbleSort(Integer[] array){
		SortData results = new SortData();
		int temp;
		for(int i = 0; i < array.length-1; i++)
			for(int j = 0; j < array.length-1; j++)
				if(array[j] > array[j+1]){
					results.comparisonCount++;
					results.copyCount += 3;
					//swap ////////////////
					temp = array[j];
					array[j] = array[j+1];
					array[j+1] = temp;
					////////////////////////
				}
		
		return results;
	}
	
	
	public static void main(String[] args) {
		// TODO Auto-generated method stub
		Integer array[] = {9,8,7,6,5,4,3,2,1,0};
		
		/*bubble sort test*/{
			SortData sortData = new SortData();
			sortData = bubbleSort(array);
			for(int i = 0; i < array.length; i++)
				System.out.print(array[i] + ", ");
		
			System.out.println(sortData);
		}
	
			
	}

}
