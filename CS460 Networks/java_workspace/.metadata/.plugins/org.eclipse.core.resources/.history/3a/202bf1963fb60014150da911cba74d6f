package CS249_Project1;

public class CircList{
	
	private Node current;          // ref to current node
	private int count;           // # of nodes on list


    public CircList() {             // constructor
		count = 0;                  // no nodes in the list yet
		current = null;
    }


    public void insert(long id) {   // insert  node before current
    	Node newNode = new Node(id);
    	
    	if(count > 0){
    		newNode.next = current;
    		current = newNode;
    	}
    	else
    		current = newNode;
    	

    }

    public Node delete() {         // delete current node

    	Node returnNode = current;
    	current = current.next;
    	return returnNode;
    }

    public Node find(long key) {     // find first node starting at  current with given key

    	Node iterator = current;
    	while(iterator.next != null){
    		if(iterator.iData == key)
    			return iterator;
    	}
    	
    	System.out.println("Error: element not found");
    	return null;
    }

    public Node delete(long key){    // delete node with given key

    	Node delNode = find(key);
    	
    	if(delNode != null){
    		
    	}

    }
  
	public class Node{

	   public long iData;              // data item (key)
	   public Node next;              // next node in the list

	   // -------------------------------------------------------------
	   public Node(long id) {           // constructor
	          iData = id;		// (next automatically null)
	    }             

	   // -------------------------------------------------------------
	   public void displayNode() {     // display yourself
	         System.out.print(iData + " ");
	    }
	  
	 }  // end class Node


}  // end class CircList



