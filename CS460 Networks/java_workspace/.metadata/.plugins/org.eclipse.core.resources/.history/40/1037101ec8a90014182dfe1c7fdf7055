/**
 * @author Kelvin Rodriguez (KR788)
 * @date   1/31/15
 * 
 * @decription This class contains the three required sort algorithms
 *  		   Bubble sort, selection sort, and insertion sort
 */


package CS249_Project1;

/**
 * Class that contains the sorting algorithms, is not very
 * practical, but it's cute.
 * @author KR788
 */
public class SortingOfAllSorts {
	
	private class SortData{
		public int comparisonCount;
		public int copyCount;
	}
	
	/**
	 * Simple swap method for the sorting algorithms
	 * @param n1 some integer value to be swapped with n2
	 * @param n2 some other integer that will be swapped with n1
	 */
	private void swap(Integer n1, Integer n2){
		int temp = n1;
		n1 = n2;
		n2 = temp;
	}
	
	/**
	 * Simple off-the-shelf bubble sort algorithm
	 * (i.e no optimization using flags and what-not)
	 * @param array the array to be sorted
	 */
	SortData void bubbleSort(int[] array){
		
		SortData results = new SortData();
		
		for(int i = 0; i < array.length; i++)
			for(int j = 0; j < array.length; j++)
				if(array[j] < array[j+1])
				{
					results.comparisonCount++;
					results.copyCount += 3;
					swap(array[j], array[j+1]);
				}
		return sortData;
	}
	
	
	
	
	
	public static void main(String[] args) {
		// TODO Auto-generated method stub
		int array[] = {9,8,7,6,5,4,3,2,1,0};
		
		for(int i = 0; i < array.length; i++)
			System.out.print(array[i] + ", ");
	}

}
